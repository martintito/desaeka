<?php

namespace Proxies\__CG__\Jaxxes\SeleccionProcesBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SelectionProcessCandidate extends \Jaxxes\SeleccionProcesBundle\Entity\SelectionProcessCandidate implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'id', 'selectionProcess', 'candidate', 'answers', 'answersResumePrivate', 'salt', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'active', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'usercandidate', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'password', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'hourStart', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'finishtest');
        }

        return array('__isInitialized__', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'id', 'selectionProcess', 'candidate', 'answers', 'answersResumePrivate', 'salt', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'active', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'usercandidate', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'password', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'hourStart', '' . "\0" . 'Jaxxes\\SeleccionProcesBundle\\Entity\\SelectionProcessCandidate' . "\0" . 'finishtest');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SelectionProcessCandidate $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserCandidate($usercandidate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserCandidate', array($usercandidate));

        return parent::setUserCandidate($usercandidate);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserCandidate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserCandidate', array());

        return parent::getUserCandidate();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelectionProcess(\Jaxxes\SeleccionProcesBundle\Entity\SelectionProcess $selectionProcess)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelectionProcess', array($selectionProcess));

        return parent::setSelectionProcess($selectionProcess);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectionProcess()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectionProcess', array());

        return parent::getSelectionProcess();
    }

    /**
     * {@inheritDoc}
     */
    public function setCandidate(\Jaxxes\CandidateBundle\Entity\Candidate $candidate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCandidate', array($candidate));

        return parent::setCandidate($candidate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidate', array());

        return parent::getCandidate();
    }

    /**
     * {@inheritDoc}
     */
    public function addAnswer(\Jaxxes\VirtualInterviewBundle\Entity\VirtualInterviewSelectionProcessCandidate $answers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnswer', array($answers));

        return parent::addAnswer($answers);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswers', array());

        return parent::getAnswers();
    }

    /**
     * {@inheritDoc}
     */
    public function addAnswerResumePrivate(\Jaxxes\SeleccionProcesBundle\Entity\ResumePrivateCandidate $answersResumePrivate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAnswerResumePrivate', array($answersResumePrivate));

        return parent::addAnswerResumePrivate($answersResumePrivate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnswersResumePrivate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnswersResumePrivate', array());

        return parent::getAnswersResumePrivate();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart($dateStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', array($dateStart));

        return parent::setDateStart($dateStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', array());

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setHourStart($hourStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHourStart', array($hourStart));

        return parent::setHourStart($hourStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getHourStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHourStart', array());

        return parent::getHourStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinishTest($finishtest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinishTest', array($finishtest));

        return parent::setFinishTest($finishtest);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinishTest()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinishTest', array());

        return parent::getFinishTest();
    }

}
