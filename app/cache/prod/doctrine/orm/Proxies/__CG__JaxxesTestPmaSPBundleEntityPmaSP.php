<?php

namespace Proxies\__CG__\Jaxxes\TestPmaSPBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class PmaSP extends \Jaxxes\TestPmaSPBundle\Entity\PmaSP implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'id', 'pma', 'selectionProcessCandidate', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'dateFinish', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorV', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorE', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorR', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorN', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorF');
        }

        return array('__isInitialized__', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'id', 'pma', 'selectionProcessCandidate', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'dateFinish', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorV', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorE', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorR', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorN', '' . "\0" . 'Jaxxes\\TestPmaSPBundle\\Entity\\PmaSP' . "\0" . 'valorF');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (PmaSP $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPma(\Jaxxes\TestPmaBundle\Entity\Pma $pma)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPma', array($pma));

        return parent::setPma($pma);
    }

    /**
     * {@inheritDoc}
     */
    public function getPma()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPma', array());

        return parent::getPma();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelectionProcessCandidate(\Jaxxes\SeleccionProcesBundle\Entity\SelectionProcessCandidate $selectionProcessCandidate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelectionProcessCandidate', array($selectionProcessCandidate));

        return parent::setSelectionProcessCandidate($selectionProcessCandidate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectionProcessCandidate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectionProcessCandidate', array());

        return parent::getSelectionProcessCandidate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart($dateStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', array($dateStart));

        return parent::setDateStart($dateStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', array());

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinish($dateFinish)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinish', array($dateFinish));

        return parent::setDateFinish($dateFinish);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinish', array());

        return parent::getDateFinish();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorV($valorV)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorV', array($valorV));

        return parent::setValorV($valorV);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorV()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorV', array());

        return parent::getValorV();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorE($valorE)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorE', array($valorE));

        return parent::setValorE($valorE);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorE()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorE', array());

        return parent::getValorE();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorR($valorR)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorR', array($valorR));

        return parent::setValorR($valorR);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorR()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorR', array());

        return parent::getValorR();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorN($valorN)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorN', array($valorN));

        return parent::setValorN($valorN);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorN()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorN', array());

        return parent::getValorN();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorF($valorF)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorF', array($valorF));

        return parent::setValorF($valorF);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorF()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorF', array());

        return parent::getValorF();
    }

}
