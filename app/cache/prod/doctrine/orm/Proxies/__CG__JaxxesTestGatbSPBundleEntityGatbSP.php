<?php

namespace Proxies\__CG__\Jaxxes\TestGatbSPBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class GatbSP extends \Jaxxes\TestGatbSPBundle\Entity\GatbSP implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'id', 'gatb', 'selectionProcessCandidate', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'dateFinish', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorQ', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorN2', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG3', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorS', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG4', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorV', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG5', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorN5');
        }

        return array('__isInitialized__', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'id', 'gatb', 'selectionProcessCandidate', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'dateStart', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'dateFinish', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorQ', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorN2', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG3', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorS', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG4', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorV', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorG5', '' . "\0" . 'Jaxxes\\TestGatbSPBundle\\Entity\\GatbSP' . "\0" . 'valorN5');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (GatbSP $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setGatb(\Jaxxes\TestGatbBundle\Entity\Gatb $gatb)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGatb', array($gatb));

        return parent::setGatb($gatb);
    }

    /**
     * {@inheritDoc}
     */
    public function getGatb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGatb', array());

        return parent::getGatb();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelectionProcessCandidate(\Jaxxes\SeleccionProcesBundle\Entity\SelectionProcessCandidate $selectionProcessCandidate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelectionProcessCandidate', array($selectionProcessCandidate));

        return parent::setSelectionProcessCandidate($selectionProcessCandidate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelectionProcessCandidate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelectionProcessCandidate', array());

        return parent::getSelectionProcessCandidate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateStart($dateStart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateStart', array($dateStart));

        return parent::setDateStart($dateStart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateStart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateStart', array());

        return parent::getDateStart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFinish($dateFinish)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFinish', array($dateFinish));

        return parent::setDateFinish($dateFinish);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFinish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFinish', array());

        return parent::getDateFinish();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorQ($valorQ)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorQ', array($valorQ));

        return parent::setValorQ($valorQ);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorQ()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorQ', array());

        return parent::getValorQ();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorN2($valorN2)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorN2', array($valorN2));

        return parent::setValorN2($valorN2);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorN2()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorN2', array());

        return parent::getValorN2();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorG3($valorG3)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorG3', array($valorG3));

        return parent::setValorG3($valorG3);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorG3()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorG3', array());

        return parent::getValorG3();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorS($valorS)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorS', array($valorS));

        return parent::setValorS($valorS);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorS()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorS', array());

        return parent::getValorS();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorG4($valorG4)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorG4', array($valorG4));

        return parent::setValorG4($valorG4);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorG4()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorG4', array());

        return parent::getValorG4();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorV($valorV)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorV', array($valorV));

        return parent::setValorV($valorV);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorV()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorV', array());

        return parent::getValorV();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorG5($valorG5)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorG5', array($valorG5));

        return parent::setValorG5($valorG5);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorG5()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorG5', array());

        return parent::getValorG5();
    }

    /**
     * {@inheritDoc}
     */
    public function setValorN5($valorN5)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValorN5', array($valorN5));

        return parent::setValorN5($valorN5);
    }

    /**
     * {@inheritDoc}
     */
    public function getValorN5()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValorN5', array());

        return parent::getValorN5();
    }

}
